{"remainingRequest":"/Users/andreaswahlstedt/dbwebb-kurser/jsramverk/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/andreaswahlstedt/dbwebb-kurser/jsramverk/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/andreaswahlstedt/dbwebb-kurser/jsramverk/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andreaswahlstedt/dbwebb-kurser/jsramverk/src/components/forms/Form.vue?vue&type=template&id=4232d6d4&scoped=true&","dependencies":[{"path":"/Users/andreaswahlstedt/dbwebb-kurser/jsramverk/src/components/forms/Form.vue","mtime":1568781912593},{"path":"/Users/andreaswahlstedt/dbwebb-kurser/jsramverk/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreaswahlstedt/dbwebb-kurser/jsramverk/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/andreaswahlstedt/dbwebb-kurser/jsramverk/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreaswahlstedt/dbwebb-kurser/jsramverk/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"main\",\n    [\n      _c(\"Nav\"),\n      _c(\"h1\", [_vm._v(\"Sida för formulär\")]),\n      _c(\"h2\", [_vm._v(\"Ett enkelt formulär.\")]),\n      _c(\n        \"form\",\n        {\n          attrs: { id: \"form\", action: \"localhost\", method: \"post\" },\n          on: { submit: _vm.formCheck }\n        },\n        [\n          _vm.errors.length\n            ? _c(\"p\", [\n                _c(\"b\", [_vm._v(\"Please correct the following error(s):\")]),\n                _c(\n                  \"ul\",\n                  _vm._l(_vm.errors, function(error) {\n                    return _c(\"li\", { key: error in _vm.errors }, [\n                      _vm._v(_vm._s(error))\n                    ])\n                  }),\n                  0\n                )\n              ])\n            : _vm._e(),\n          _c(\"p\", [\n            _c(\"label\", { attrs: { for: \"name\" } }, [_vm._v(\"Namn\")]),\n            _c(\"br\"),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.name,\n                  expression: \"name\"\n                }\n              ],\n              staticClass: \"input-field\",\n              attrs: { id: \"name\", type: \"text\", name: \"name\", min: \"1\" },\n              domProps: { value: _vm.name },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.name = $event.target.value\n                }\n              }\n            })\n          ]),\n          _c(\"p\", [\n            _c(\"label\", { attrs: { for: \"email\" } }, [_vm._v(\"E-post\")]),\n            _c(\"br\"),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.email,\n                  expression: \"email\"\n                }\n              ],\n              staticClass: \"input-field\",\n              attrs: { id: \"email\", type: \"email\", name: \"email\" },\n              domProps: { value: _vm.email },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.email = $event.target.value\n                }\n              }\n            })\n          ]),\n          _c(\"p\", [\n            _c(\"label\", { attrs: { for: \"password\" } }, [_vm._v(\"Lösenord\")]),\n            _c(\"br\"),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.password,\n                  expression: \"password\"\n                }\n              ],\n              staticClass: \"input-field\",\n              attrs: { id: \"password\", type: \"password\", name: \"password\" },\n              domProps: { value: _vm.password },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.password = $event.target.value\n                }\n              }\n            })\n          ]),\n          _c(\"p\", [\n            _c(\"label\", { attrs: { for: \"age\" } }, [_vm._v(\"Födelsedag\")]),\n            _c(\"br\"),\n            _c(\n              \"select\",\n              {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.yearSelected,\n                    expression: \"yearSelected\"\n                  }\n                ],\n                attrs: { name: \"year\", required: \"\" },\n                on: {\n                  change: function($event) {\n                    var $$selectedVal = Array.prototype.filter\n                      .call($event.target.options, function(o) {\n                        return o.selected\n                      })\n                      .map(function(o) {\n                        var val = \"_value\" in o ? o._value : o.value\n                        return val\n                      })\n                    _vm.yearSelected = $event.target.multiple\n                      ? $$selectedVal\n                      : $$selectedVal[0]\n                  }\n                }\n              },\n              [\n                _c(\"option\", { attrs: { disabled: \"\", value: \"\" } }, [\n                  _vm._v(\"År\")\n                ]),\n                _vm._l(100, function(n, index) {\n                  return _c(\n                    \"option\",\n                    {\n                      key: index,\n                      domProps: { value: _vm.date.getFullYear() - index }\n                    },\n                    [_vm._v(_vm._s(_vm.date.getFullYear() - index))]\n                  )\n                })\n              ],\n              2\n            ),\n            _c(\n              \"select\",\n              {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.monthSelected,\n                    expression: \"monthSelected\"\n                  }\n                ],\n                attrs: { name: \"month\", required: \"\" },\n                on: {\n                  change: function($event) {\n                    var $$selectedVal = Array.prototype.filter\n                      .call($event.target.options, function(o) {\n                        return o.selected\n                      })\n                      .map(function(o) {\n                        var val = \"_value\" in o ? o._value : o.value\n                        return val\n                      })\n                    _vm.monthSelected = $event.target.multiple\n                      ? $$selectedVal\n                      : $$selectedVal[0]\n                  }\n                }\n              },\n              [\n                _c(\"option\", { attrs: { disabled: \"\", value: \"\" } }, [\n                  _vm._v(\"Månad\")\n                ]),\n                _vm._l(12, function(month) {\n                  return _c(\n                    \"option\",\n                    { key: month, domProps: { value: month } },\n                    [_vm._v(\" \" + _vm._s(month) + \" \")]\n                  )\n                })\n              ],\n              2\n            ),\n            _c(\n              \"select\",\n              {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.daySelected,\n                    expression: \"daySelected\"\n                  }\n                ],\n                attrs: { name: \"day\", required: \"\" },\n                on: {\n                  change: function($event) {\n                    var $$selectedVal = Array.prototype.filter\n                      .call($event.target.options, function(o) {\n                        return o.selected\n                      })\n                      .map(function(o) {\n                        var val = \"_value\" in o ? o._value : o.value\n                        return val\n                      })\n                    _vm.daySelected = $event.target.multiple\n                      ? $$selectedVal\n                      : $$selectedVal[0]\n                  }\n                }\n              },\n              [\n                _c(\"option\", { attrs: { disabled: \"\", value: \"\" } }, [\n                  _vm._v(\"Dag\")\n                ]),\n                _vm._l(31, function(day) {\n                  return _c(\"option\", { key: day, domProps: { value: day } }, [\n                    _vm._v(\" \" + _vm._s(day) + \"  \")\n                  ])\n                })\n              ],\n              2\n            ),\n            _c(\"br\")\n          ]),\n          _vm._m(0)\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"input\", {\n        staticClass: \"button\",\n        attrs: { type: \"submit\", value: \"Submit\" }\n      })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}